from sklearn.datasets import load_iris
from sklearn.model_selection import cross_val_score
from sklearn.tree import DecisionTreeClassifier
import numpy as np
from sklearn.metrics import accuracy_score
import graphviz 
from sklearn import tree
# clf = DecisionTreeClassifier(random_state=0)

X = np.c_[(0, 0, 0, 5, 5, 0, 0, 0, 2, 7, 5, 0, 1, 3, 4, 1, 0, 0, 0, 0),
		  (0, 0, 0, 5, 3, 0, 0, 0, 1, 13, 3, 0, 0, 2, 5, 1, 0, 0, 0, 0),
		  (0, 0, 0, 4, 5, 1, 0, 0, 3, 8, 3, 0, 0, 3, 3, 2, 0, 0, 1, 0),
		  (0, 1, 1, 0, 4, 0, 0, 0, 2, 11, 5, 0, 0, 4, 3, 1, 0, 1, 0, 0),
		  (0, 0, 0, 4, 5, 3, 0, 0, 5, 4, 1, 1, 1, 3, 5, 0, 0, 0, 1, 0),
		  (0, 0, 0, 2, 5, 1, 0, 0, 3, 15, 2, 0, 0, 2, 2, 1, 0, 0, 0, 0),
		  (1, 0, 0, 9, 2, 0, 0, 1, 1, 4, 5, 0, 0, 4, 6, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 4, 0, 0, 0, 4, 14, 3, 0, 0, 2, 4, 0, 0, 0, 0, 0),
		  (0, 0, 0, 1, 4, 0, 0, 0, 2, 16, 4, 0, 1, 2, 3, 0, 0, 0, 0, 0),
		  (0, 0, 0, 6, 3, 1, 0, 0, 2, 8, 4, 0, 2, 4, 3, 0, 0, 0, 0, 0),
		  (1, 0, 1, 2, 2, 2, 0, 0, 1, 12, 3, 0, 0, 4, 5, 0, 0, 0, 0, 0),
		  (0, 0, 0, 4, 3, 1, 1, 0, 4, 12, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0),
		  (0, 0, 0, 2, 3, 2, 0, 0, 5, 11, 2, 0, 1, 3, 2, 1, 0, 0, 1, 0),
		  (0, 0, 0, 3, 5, 0, 0, 0, 3, 13, 2, 1, 0, 1, 3, 0, 0, 0, 1, 1),
		  (0, 0, 0, 1, 3, 1, 0, 0, 4, 16, 2, 0, 0, 3, 3, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 3, 0, 0, 0, 3, 14, 5, 0, 0, 4, 2, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 4, 0, 0, 0, 2, 16, 4, 0, 1, 3, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 4, 3, 0, 0, 0, 3, 15, 4, 0, 0, 2, 1, 1, 0, 0, 0, 0),
		  (0, 0, 0, 1, 2, 0, 0, 0, 3, 20, 4, 0, 0, 2, 0, 1, 0, 0, 0, 0),
		  (0, 0, 0, 0, 4, 1, 0, 0, 4, 15, 3, 0, 1, 3, 2, 0, 0, 0, 0, 0),
		  (0, 0, 0, 1, 5, 0, 0, 0, 3, 16, 3, 1, 0, 2, 1, 0, 0, 0, 0, 1),
		  (0, 0, 0, 0, 5, 1, 0, 0, 5, 12, 3, 0, 1, 3, 1, 1, 1, 0, 0, 0),
		  (0, 0, 0, 0, 3, 3, 0, 0, 4, 17, 2, 0, 1, 3, 0, 0, 0, 0, 0, 0),
		  (0, 0, 0, 0, 5, 0, 0, 0, 1, 18, 4, 1, 2, 2, 0, 0, 0, 0, 0, 0),
		  (1, 0, 0, 2, 5, 1, 1, 0, 5, 6, 4, 0, 2, 2, 3, 0, 0, 0, 0, 0),
		  (0, 0, 0, 0, 2, 2, 0, 0, 2, 21, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0),
		  (0, 0, 0, 1, 4, 0, 0, 0, 3, 20, 2, 0, 0, 2, 0, 0, 0, 1, 0, 0),
		  (0, 0, 0, 0, 5, 0, 0, 0, 2, 22, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0),
		  (0, 0, 0, 0, 2, 1, 0, 0, 2, 22, 2, 0, 1, 2, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 4, 1, 0, 0, 3, 14, 3, 0, 1, 4, 0, 0, 1, 0, 0, 0),
		  (0, 0, 0, 3, 3, 3, 0, 0, 4, 7, 3, 0, 3, 4, 3, 0, 0, 0, 0, 0),
		  (1, 0, 0, 0, 5, 0, 0, 1, 2, 13, 5, 0, 1, 3, 0, 1, 0, 1, 0, 0),
		  (0, 0, 0, 4, 6, 0, 0, 0, 6, 12, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 7, 0, 0, 0, 6, 12, 3, 0, 0, 1, 0, 0, 2, 0, 0, 0),
		  (0, 0, 0, 0, 2, 2, 0, 0, 4, 23, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0),
		  (0, 0, 0, 6, 2, 1, 0, 0, 3, 13, 2, 0, 0, 2, 1, 1, 0, 1, 1, 0),
		  (0, 0, 0, 7, 5, 0, 0, 0, 5, 5, 4, 0, 0, 2, 2, 1, 0, 2, 0, 0),
		  (0, 0, 0, 3, 4, 2, 0, 0, 2, 14, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0),
		  (0, 2, 0, 0, 4, 1, 0, 2, 3, 13, 2, 1, 1, 2, 0, 0, 0, 2, 0, 0),
		  (0, 0, 0, 4, 3, 2, 0, 0, 4, 10, 2, 0, 2, 3, 3, 0, 0, 0, 0, 0),
		  (0, 0, 0, 6, 5, 1, 0, 0, 2, 9, 3, 1, 1, 2, 0, 1, 2, 0, 0, 0),
		  (1, 0, 0, 2, 6, 0, 0, 1, 3, 9, 3, 1, 1, 3, 2, 0, 0, 0, 1, 0),
		  (0, 0, 0, 3, 4, 1, 0, 0, 5, 10, 3, 1, 1, 3, 1, 0, 0, 0, 1, 0),
		  (0, 0, 0, 3, 5, 0, 0, 0, 4, 12, 3, 0, 0, 4, 0, 0, 0, 1, 1, 0),
		  (1, 0, 0, 4, 4, 0, 0, 1, 3, 6, 4, 0, 0, 6, 2, 0, 0, 0, 1, 1),
		  (0, 0, 0, 11, 3, 1, 0, 0, 4, 5, 2, 0, 0, 3, 0, 0, 0, 2, 0, 2),
		  (1, 0, 1, 6, 2, 0, 0, 0, 3, 10, 3, 1, 0, 4, 1, 0, 0, 0, 1, 0),
		  (0, 2, 1, 3, 5, 0, 0, 1, 5, 6, 3, 1, 0, 3, 1, 0, 1, 0, 1, 0),
		  (0, 1, 1, 1, 2, 0, 0, 0, 4, 17, 2, 0, 0, 2, 2, 0, 0, 1, 0, 0),
		  (0, 0, 0, 3, 2, 1, 1, 0, 4, 15, 1, 0, 0, 2, 2, 1, 0, 1, 0, 0),
		  (0, 0, 0, 4, 5, 0, 0, 0, 4, 13, 3, 0, 0, 1, 0, 1, 0, 2, 0, 0),
		  (0, 0, 0, 7, 3, 1, 0, 0, 3, 10, 4, 0, 1, 2, 1, 1, 0, 0, 0, 0),
		  (0, 0, 0, 3, 2, 4, 0, 0, 2, 12, 2, 0, 3, 3, 2, 0, 0, 0, 0, 0),
		  (0, 0, 0, 8, 3, 0, 2, 0, 4, 10, 2, 0, 1, 1, 0, 0, 0, 2, 0, 0),
		  (0, 0, 0, 4, 3, 0, 1, 0, 4, 6, 4, 2, 1, 4, 1, 0, 0, 2, 1, 0),
		  (0, 0, 0, 9, 1, 1, 1, 0, 3, 3, 2, 1, 1, 3, 4, 1, 0, 2, 1, 0),
		  (0, 0, 0, 3, 3, 2, 1, 0, 4, 9, 2, 2, 1, 3, 0, 0, 2, 1, 0, 0),
		  (0, 0, 0, 3, 3, 3, 0, 0, 4, 12, 1, 1, 3, 2, 0, 0, 0, 1, 0, 0),
		  (0, 0, 0, 4, 3, 2, 0, 0, 3, 6, 4, 0, 2, 4, 3, 1, 0, 0, 1, 0),
		  (0, 0, 0, 5, 4, 1, 1, 0, 2, 6, 3, 1, 2, 2, 4, 0, 1, 1, 0, 0),
		  (0, 0, 0, 3, 4, 1, 0, 0, 5, 6, 4, 0, 1, 4, 5, 0, 0, 0, 0, 0),
		  (0, 0, 0, 6, 6, 0, 0, 0, 4, 8, 2, 0, 1, 1, 3, 1, 0, 1, 0, 0),
		  (0, 0, 0, 4, 4, 1, 1, 0, 5, 6, 3, 0, 0, 4, 4, 0, 1, 0, 0, 0),
		  (0, 0, 0, 5, 6, 2, 0, 0, 4, 5, 3, 0, 3, 1, 1, 1, 0, 1, 0, 1),
		  (0, 0, 0, 5, 2, 2, 1, 0, 3, 5, 4, 1, 1, 5, 2, 0, 0, 2, 0, 0),
		  (0, 0, 0, 4, 3, 4, 0, 0, 3, 5, 3, 1, 2, 4, 3, 0, 1, 0, 0, 0),
		  (0, 0, 0, 3, 5, 0, 0, 0, 3, 10, 6, 0, 2, 3, 0, 1, 0, 0, 0, 0),
		  (0, 0, 0, 0, 4, 0, 0, 0, 4, 15, 4, 1, 0, 4, 0, 0, 0, 0, 1, 0),
		  (0, 0, 0, 2, 4, 0, 0, 0, 3, 17, 3, 0, 0, 2, 2, 0, 0, 0, 0, 0),
		  (0, 0, 0, 0, 4, 2, 0, 0, 4, 13, 4, 0, 2, 2, 0, 1, 0, 1, 0, 0),
		  (0, 0, 0, 1, 2, 1, 0, 0, 4, 15, 4, 0, 0, 4, 2, 0, 0, 0, 0, 0),
		  (0, 0, 0, 1, 5, 2, 0, 0, 5, 8, 5, 0, 1, 5, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 4, 1, 0, 0, 4, 14, 2, 0, 1, 2, 3, 0, 0, 0, 0, 0),
		  (0, 0, 0, 1, 5, 3, 0, 0, 4, 5, 5, 0, 3, 5, 2, 0, 0, 0, 0, 0),
		  (0, 0, 0, 3, 5, 0, 0, 0, 4, 10, 4, 1, 0, 5, 0, 0, 0, 1, 0, 0),
		  (0, 0, 0, 0, 6, 1, 0, 0, 6, 10, 3, 0, 1, 5, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 6, 0, 0, 0, 3, 8, 5, 1, 2, 2, 3, 0, 0, 1, 0, 0),
		  (0, 0, 0, 1, 5, 1, 0, 0, 4, 12, 4, 0, 1, 2, 1, 1, 0, 0, 1, 0),
		  (0, 0, 0, 1, 2, 3, 0, 0, 3, 12, 4, 0, 3, 4, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 3, 4, 0, 0, 0, 3, 12, 4, 1, 0, 3, 2, 0, 0, 0, 1, 0),
		  (0, 0, 0, 2, 3, 0, 0, 0, 3, 14, 5, 0, 1, 4, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 5, 1, 0, 0, 5, 10, 4, 0, 1, 4, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 0, 5, 1, 0, 0, 4, 10, 5, 0, 2, 3, 1, 1, 0, 1, 0, 0),
		  (0, 0, 0, 3, 4, 0, 0, 0, 4, 13, 5, 0, 1, 2, 0, 1, 0, 0, 0, 0),
		  (0, 0, 0, 1, 4, 1, 0, 0, 4, 14, 4, 0, 0, 4, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 1, 3, 0, 0, 0, 2, 19, 4, 0, 0, 3, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 3, 3, 1, 0, 0, 3, 12, 4, 0, 1, 3, 1, 1, 0, 1, 0, 0),
		  (0, 0, 0, 1, 3, 1, 0, 0, 4, 14, 5, 0, 1, 3, 0, 1, 0, 0, 0, 0),
		  (0, 0, 0, 0, 3, 3, 0, 0, 5, 14, 3, 0, 1, 4, 0, 0, 0, 0, 0, 0),
		  (0, 0, 0, 1, 6, 1, 0, 0, 4, 8, 5, 0, 1, 5, 2, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 3, 0, 0, 0, 4, 11, 6, 0, 0, 4, 3, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 5, 1, 0, 0, 4, 8, 4, 1, 2, 4, 1, 0, 0, 0, 1, 0),
		  (0, 0, 0, 3, 4, 0, 0, 0, 3, 12, 5, 0, 0, 5, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 4, 3, 1, 0, 0, 2, 14, 3, 0, 1, 4, 1, 0, 0, 0, 0, 0),
		  (0, 0, 0, 1, 6, 0, 0, 0, 3, 11, 5, 1, 2, 3, 0, 0, 0, 0, 1, 0),
		  (0, 0, 0, 5, 2, 1, 0, 0, 4, 15, 2, 0, 0, 2, 0, 1, 0, 0, 1, 0),
		  (0, 0, 0, 3, 4, 2, 0, 0, 5, 9, 3, 1, 2, 3, 0, 0, 0, 1, 0, 0),
		  (0, 0, 0, 3, 3, 1, 0, 0, 2, 13, 4, 0, 1, 3, 3, 0, 0, 0, 0, 0),
		  (0, 0, 0, 2, 3, 0, 0, 0, 3, 17, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0),
		  (0, 0, 0, 1, 4, 1, 0, 0, 4, 14, 2, 1, 1, 2, 2, 0, 1, 0, 0, 0),
		  (0, 0, 0, 0, 5, 2, 0, 0, 6, 9, 3, 0, 1, 3, 2, 1, 0, 1, 0, 0)].T
Y = ['CH'] * 17 + ['JB'] * 18 + ['KCH'] * 17 + ['LGK'] * 14 + ['PJ'] * 17 + ['SBG'] * 18

test = np.c_[(1, 0, 1, 2, 2, 2, 0, 0, 1, 12, 3, 0, 0, 4, 5, 0, 0, 0, 0, 0),
			   (0, 0, 0, 4, 3, 1, 1, 0, 4, 12, 2, 0, 1, 2, 2, 0, 0, 0, 1, 0),
			   (0, 0, 0, 2, 3, 2, 0, 0, 5, 11, 2, 0, 1, 3, 2, 1, 0, 0, 1, 0),
			   (0, 0, 0, 3, 5, 0, 0, 0, 3, 13, 2, 1, 0, 1, 3, 0, 0, 0, 1, 1),
			   (0, 0, 0, 1, 3, 1, 0, 0, 4, 16, 2, 0, 0, 3, 3, 0, 0, 0, 0, 0),
			   (0, 0, 0, 2, 3, 0, 0, 0, 3, 14, 5, 0, 0, 4, 2, 0, 0, 0, 0, 0),
			   (0, 0, 0, 2, 4, 0, 0, 0, 2, 16, 4, 0, 1, 3, 1, 0, 0, 0, 0, 0),
			   (0, 0, 0, 0, 5, 0, 0, 0, 2, 22, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0),
			   (0, 0, 0, 0, 2, 1, 0, 0, 2, 22, 2, 0, 1, 2, 1, 0, 0, 0, 0, 0),
			   (0, 0, 0, 2, 4, 1, 0, 0, 3, 14, 3, 0, 1, 4, 0, 0, 1, 0, 0, 0),
			   (0, 0, 0, 3, 3, 3, 0, 0, 4, 7, 3, 0, 3, 4, 3, 0, 0, 0, 0, 0),
			   (1, 0, 0, 0, 5, 0, 0, 1, 2, 13, 5, 0, 1, 3, 0, 1, 0, 1, 0, 0),
			   (0, 0, 0, 4, 6, 0, 0, 0, 6, 12, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0),
			   (0, 0, 0, 2, 7, 0, 0, 0, 6, 12, 3, 0, 0, 1, 0, 0, 2, 0, 0, 0),
			   (0, 0, 0, 0, 2, 2, 0, 0, 4, 23, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0),
			   (0, 0, 0, 11, 3, 1, 0, 0, 4, 5, 2, 0, 0, 3, 0, 0, 0, 2, 0, 2),
			   (1, 0, 1, 6, 2, 0, 0, 0, 3, 10, 3, 1, 0, 4, 1, 0, 0, 0, 1, 0),
			   (0, 2, 1, 3, 5, 0, 0, 1, 5, 6, 3, 1, 0, 3, 1, 0, 1, 0, 1, 0),
			   (0, 1, 1, 1, 2, 0, 0, 0, 4, 17, 2, 0, 0, 2, 2, 0, 0, 1, 0, 0),
			   (0, 0, 0, 3, 2, 1, 1, 0, 4, 15, 1, 0, 0, 2, 2, 1, 0, 1, 0, 0),
			   (0, 0, 0, 4, 5, 0, 0, 0, 4, 13, 3, 0, 0, 1, 0, 1, 0, 2, 0, 0),
			   (0, 0, 0, 7, 3, 1, 0, 0, 3, 10, 4, 0, 1, 2, 1, 1, 0, 0, 0, 0),
			   (0, 0, 0, 2, 4, 0, 0, 0, 5, 13, 2, 0, 0, 2, 3, 1, 0, 1, 0, 0),
			   (0, 0, 0, 4, 3, 0, 0, 0, 3, 13, 3, 0, 0, 3, 4, 0, 0, 0, 0, 0),
			   (0, 0, 0, 5, 4, 0, 0, 0, 4, 9, 4, 0, 0, 3, 1, 1, 0, 1, 0, 1),
			   (0, 0, 0, 6, 3, 1, 0, 0, 4, 5, 3, 1, 0, 4, 5, 0, 0, 1, 0, 0),
			   (0, 0, 0, 5, 3, 2, 0, 0, 4, 5, 3, 0, 0, 5, 6, 0, 0, 0, 0, 0),
			   (0, 0, 0, 0, 6, 1, 0, 0, 6, 10, 3, 0, 1, 5, 1, 0, 0, 0, 0, 0),
			   (0, 0, 0, 2, 6, 0, 0, 0, 3, 8, 5, 1, 2, 2, 3, 0, 0, 1, 0, 0),
			   (0, 0, 0, 1, 5, 1, 0, 0, 4, 12, 4, 0, 1, 2, 1, 1, 0, 0, 1, 0),
			   (0, 0, 0, 1, 2, 3, 0, 0, 3, 12, 4, 0, 3, 4, 1, 0, 0, 0, 0, 0),
			   (0, 0, 0, 3, 4, 0, 0, 0, 3, 12, 4, 1, 0, 3, 2, 0, 0, 0, 1, 0),
			   (0, 0, 0, 2, 3, 0, 0, 0, 3, 14, 5, 0, 1, 4, 1, 0, 0, 0, 0, 0),
			   (0, 0, 0, 2, 5, 1, 0, 0, 5, 10, 4, 0, 1, 4, 1, 0, 0, 0, 0, 0),
			   (0, 0, 0, 0, 5, 1, 0, 0, 4, 10, 5, 0, 2, 3, 1, 1, 0, 1, 0, 0),
			   (0, 0, 0, 4, 3, 1, 0, 0, 2, 14, 3, 0, 1, 4, 1, 0, 0, 0, 0, 0),
			   (0, 0, 0, 1, 6, 0, 0, 0, 3, 11, 5, 1, 2, 3, 0, 0, 0, 0, 1, 0),
			   (0, 0, 0, 5, 2, 1, 0, 0, 4, 15, 2, 0, 0, 2, 0, 1, 0, 0, 1, 0),
			   (0, 0, 0, 3, 4, 2, 0, 0, 5, 9, 3, 1, 2, 3, 0, 0, 0, 1, 0, 0),
			   (0, 0, 0, 3, 3, 1, 0, 0, 2, 13, 4, 0, 1, 3, 3, 0, 0, 0, 0, 0),
			   (0, 0, 0, 2, 3, 0, 0, 0, 3, 17, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0),
			   (0, 0, 0, 1, 4, 1, 0, 0, 4, 14, 2, 1, 1, 2, 2, 0, 1, 0, 0, 0),
			   (0, 0, 0, 0, 5, 2, 0, 0, 6, 9, 3, 0, 1, 3, 2, 1, 0, 1, 0, 0)].T

y_true = ['CH'] * 7 + ['JB'] * 8 + ['KCH'] * 7 + ['LGK'] * 5 + ['PJ'] * 8 + ['SBG'] * 8



clf = DecisionTreeClassifier(random_state=0)
clf = clf.fit(X, Y)
y_pred = clf.predict(test)
print('Prediction : ',y_pred)
print('Actual value : ',y_true)
print('Testing Validation Accuracy : ',accuracy_score(y_true, y_pred))